'use strict'
//=============================== task 01 =======================

// –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ 10-—é –∏–∫—Å–∞–º–∏ —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞.
// const newArr = [];
//
// while (newArr.length < 10) {
//   newArr.push('x');
// }
//
// console.log(newArr);

//=============================== task 02 =======================

// –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —á–∏—Å–ª–∞–º–∏ –æ—Ç 1 –¥–æ 10 —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞.
// const newArr = [];
// let i = 0;
//
// while (newArr.length < 10) {
//   newArr.push(++i);
// }
//
// console.log(newArr);

//=============================== task 03 =======================

// –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, '123456'. –°–¥–µ–ª–∞–π—Ç–µ –∏–∑ –Ω–µ–µ '214365'.
// const str = '123456';
// const arr = str.split('');
//
// for (let i = 0; i < arr.length; i++) {
//   if (i % 2 !== 0) {
//     let astr = arr[i-1];
//     arr[i-1] = arr[i];
//     arr[i] = astr;
//   }
// }
//
// const newStr = arr.join(' ');
//
// console.log(newStr);

//=============================== task 04 =======================

//–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isNumberInRange, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ–Ω–æ –±–æ–ª—å—à–µ –Ω—É–ª—è –∏ –º–µ–Ω—å—à–µ 10. –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫ - –ø—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –Ω–µ —Ç–∞–∫ - false.
// const isNumberInRange = (number) => {
//   if (number > 0 && number < 10) {
//     return true;
//   } else {
//     return false;
//   }
// }
//
// console.log(isNumberInRange(10));

//=============================== task 05 =======================

// –°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isEven() (even - —ç—Ç–æ —á–µ—Ç–Ω—ã–π), –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç: —á–µ—Ç–Ω–æ–µ –æ–Ω–æ –∏–ª–∏ –Ω–µ—Ç. –ï—Å–ª–∏ —á–µ—Ç–Ω–æ–µ - –ø—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –Ω–µ—á–µ—Ç–Ω–æ–µ - false.
// const isEven = (number) => {
//   if (number % 2 === 0) {
//     return true;
//   } else {
//     return false;
//   }
// }
//
// console.log(isEven(5));

//=============================== task 06 =======================

// –î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏. –°–æ–∑–¥–∞–π—Ç–µ –∏–∑ –Ω–µ–≥–æ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≥–¥–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –ª–µ–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ –∏–∑ —ç—Ç–∏—Ö —á–∏—Å–µ–ª. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é isEven –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏
// const arr = [1, 2, 3, 4, 5, 6, 7, 8];
//
// const isEven = (number) => {
//   if (number % 2 === 0) {
//     return true;
//   } else {
//     return false;
//   }
// }
//
// const newArr = [];
// for (let key of arr) {
//   if(isEven(key)) {
//     newArr.push(key);
//   }
// }
//
// console.log(newArr);

//=============================== task 07 =======================

// –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –°–¥–µ–ª–∞–π—Ç–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏. –î–ª—è —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞–π—Ç–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é ucfirst, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–ª–∞–≤–Ω—ã–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –ø–µ—Ä–≤–æ–π –±—É–∫–≤–æ–π

// let str ='abcde abcde abcde';
//
// const ucfirst = (str) => {
//   str = str.charAt(0).toUpperCase() + str.slice(1);
//   return str;
// }
//
// console.log(ucfirst(str));

//=============================== task 08 =======================

// –°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é inArray, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –µ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ —ç–ª–µ–º–µ–Ω—Ç —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –Ω–µ—Ç. –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞, –∞ –≤—Ç–æ—Ä—ã–º - –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –¥–µ–ª–∞–µ—Ç—Å—è –ø–æ–∏—Å–∫. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true –∏–ª–∏ false

// const str = '—è–±–ª–æ–∫–æ';
// const arr = ['–±–∞–Ω–∞–Ω', '—è–±–ª–æ–∫–æ', '–ø–µ—Ä—Å–∏–∫'];
//
// const inArray = (str, arr) => {
//     if(arr.includes(str)) {
//       return true;
//     } else {
//       return false;
//     }
// }
//
// console.log(inArray(str, arr));

//=============================== task 09 =======================

// –°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getDivisors, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π (—á–∏—Å–µ–ª, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∏—Ç—Å—è –¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ)
// const getDivisors = (number) => {
//   let arr = [];
//   for (let i = 0; i < number+1; i++) {
//     if(number % i === 0) {
//       arr.push(number/i);
//     }
//   }
//   return arr.reverse();
// }
//
// console.log(`–î–µ–ª–∏—Ç–µ–ª–∏ —á–∏—Å–ª–∞ 50 = ${getDivisors(50)}`);

//=============================== task 10 =======================


/*
  –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é checkNumberType(num)

  –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —á–∏—Å–ª–æ num –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
  —Å—Ç—Ä–æ–∫—É "Even" –µ—Å–ª–∏ —á–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ –∏ —Å—Ç—Ä–æ–∫—É "Odd" –µ—Å–ª–∏ –Ω–µ —á–µ—Ç–Ω–æ–µ.
*/

// const checkNumberType = (num) => {
//   if(num % 2 === 0) {
//     return 'even';
//   } else {
//     return 'odd';
//   }
// }
//
// // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
// console.log( checkNumberType(2) ); // 'Even'
//
// console.log( checkNumberType(46) ); // 'Even'
//
// console.log( checkNumberType(3) ); // 'Odd'
//
// console.log( checkNumberType(17) ); // 'Odd'

//=============================== task 11 =======================

/*
  –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é formatString(str)

  - –§—É–Ω–∫–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É str
  - –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 40 —Å–∏–º–≤–æ–ª–æ–≤, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ.
  - –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –±–æ–ª—å—à–µ 40 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–µ–∑–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–æ 40-–∫–∞
    —Å–∏–º–≤–æ–ª–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏ —Ç—Ä–æ–µ—Ç–æ—á–∏–µ '...', –ø–æ—Å–ª–µ —á–µ–≥–æ
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–æ—Ä–æ—á–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é.
*/

// const formatString = (str) => {
//   if (str.length > 40) {
//     return str.substring(0, 40) + '...';
//   } else {
//     return str;
//   }
// }
//
// // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
// console.log(
//     formatString("Curabitur ligula sapien, tincidunt non.")
//   ); // –≤–µ—Ä–Ω–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
//
//   console.log(
//     formatString("Vestibulum facilisis, purus nec pulvinar iaculis.")
//   ); // –≤–µ—Ä–Ω–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
//
//   console.log(
//     formatString("Curabitur ligula sapien.")
//   ); // –≤–µ—Ä–Ω–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
//
//   console.log(
//     formatString("Nunc sed turpis. Curabitur a felis in nunc fringilla tristique.")
//   ); // –≤–µ—Ä–Ω–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

//=============================== task 12 =======================


/*
  –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é checkForSpam(str)

  –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 1 –ø–∞—Ä–∞–º–µ—Ç—Ä str - —Å—Ç—Ä–æ–∫—É,
  –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ–µ –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–ª–æ–≤: spam –∏ sale

  –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –∑–∞—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true,
  –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false

  PS: —Å–ª–æ–≤–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
*/

// const checkForSpam = str => {
//   str = str.toLowerCase();
//   if (str.includes('spam') || str.includes('sale')) {
//     return true;
//   } else {
//     return false;
//   }
// }
//
// // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
// console.log( checkForSpam('Latest technology news') ); // false
//
// console.log( checkForSpam('JavaScript weekly newsletter') ); // false
//
// console.log( checkForSpam('Get best sale offers now!') ); // true
//
// console.log( checkForSpam('[SPAM] How to earn fast money?') ); // true

// HOMEWORK
/*
  –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ logins —Å –ª–æ–≥–∏–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞ –≤ –º–∞—Å—Å–∏–≤ logins.

  –î–æ–±–∞–≤–ª—è–µ–º—ã–π –ª–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω:
    - –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –¥–ª–∏–Ω—É –æ—Ç 4 –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
    - –±—ã—Ç—å —É–Ω–∏–∫–∞–ª–µ–Ω, —Ç–æ –µ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ logins

  üîî –†–∞–∑–±–µ–π—Ç–µ –∑–∞–¥–∞—á—É –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π.

  –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isLoginValid(login), –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤
  –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ login –∏ –≤–µ—Ä–Ω–∏—Ç–µ true –∏–ª–∏ false –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ –¥–ª–∏–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
  –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 4-—Ö –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.

  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isLoginUnique(allLogins, login), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–æ–≥–∏–Ω –∏ —Å–ø–∏—Å–æ–∫
  –≤—Å–µ—Ö –ª–æ–≥–∏–Ω–æ–≤ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ login –≤ –º–∞—Å—Å–∏–≤–µ allLogins, –≤–æ–∑–≤—Ä–∞—â–∞—è true
  –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –µ—â–µ –Ω–µ—Ç –∏ false –µ—Å–ª–∏ –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
  –î–∞–ª–µ–µ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é addLogin(allLogins, login) –∫–æ—Ç–æ—Ä–∞—è:
    - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω –∏ –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ª–æ–≥–∏–Ω–æ–≤ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é isLoginValid
    - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ addLogin
      –∏ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
    - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –≤–∞–ª–∏–¥–µ–Ω, —Ñ—É–Ω–∫—Ü–∏—è addLogin –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞
      —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ isLoginUnique
    - –ï—Å–ª–∏ isLoginUnique –≤–µ—Ä–Ω–µ—Ç true, addLogin –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω
       –≤ logins –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!'
    - –ï—Å–ª–∏ isLoginUnique –≤–µ—Ä–Ω–µ—Ç false, —Ç–æ–≥–¥–∞ addLogin –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç
       –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!'

  üîî –ü—Ä–∏–Ω—Ü–∏–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ - –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ. –≠—Ç–æ
     –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –∏–∑–º–µ–Ω—è—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ,
     –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—è —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ü–µ–ª–æ–º. –ü—Ä–µ–¥–∏–∫–∞—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ç–æ–ª—å–∫–æ true –∏–ª–∏
     false. –¢–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞–∑—ã–≤–∞—Ç—å –Ω–∞—á–∏–Ω–∞—è —Å is: isLoginUnique –∏ isLoginValid –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ.
      - isLoginUnique —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.
      - isLoginValid —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π –ª–∏ –ª–æ–≥–∏–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.
      - addLogin –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤. –ü—Ä–∏ —ç—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫ —É—Å–ª–æ–≤–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–∑–æ–≤–æ–≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π - isLoginUnique –∏ isLoginValid.
*/

// const logins = ["Mango", "robotGoogles", "Poly", "Aj4x1sBozz", "qwerty123"];
//
// const isLoginValid = function(login) {
//   if (login.length >= 4 && login.length < 16) {
//     return true;
//   } else {
//     return false;
//   }
// };
//
// const isLoginUnique = function(allLogins, login) {
//   if(allLogins.includes(login)) {
//     return false;
//   } else {
//     return true;
//   }
// };
//
// const addLogin = function(allLogins, login) {
//   if (isLoginValid(login)) {
//     if (isLoginUnique(allLogins, login)) {
//       allLogins.push(login);
//       return '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!';
//     } else {
//       return '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!';
//     }
//   } else {
//     console.log('–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤');
//     return 0;
//   }
// };
//
// // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
// console.log(addLogin(logins, 'Ajax')); // '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!'
// console.log(addLogin(logins, 'robotGoogles')); // '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!'
// console.log(addLogin(logins, 'Zod')); // '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
// console.log(addLogin(logins, 'jqueryisextremelyfast')); // '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
