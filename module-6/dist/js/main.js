"use strict";const findPriceAndCalories=(r,e,i)=>{let s=0,a=0;if("price"===i){for(let i in r)(i===e||e.includes(i))&&(s+=r[i].price);return s}if("calories"===i){for(let i in r)(i===e||e.includes(i))&&(a+=r[i].calories);return a}};class Hamburger{constructor(r,e){this._size=r,this._stuffing=e,this._toppings=[],this._calculatePrice=0,this._calculateCalories=0}addTopping(...r){return this._toppings=[...new Set(this._toppings.concat(r))],this._toppings}removeTopping(r){return this._toppings.includes(r)?this._toppings.splice(this._toppings.indexOf(r),1):this._toppings,this._toppings}get toppings(){return this._toppings}get size(){return this._size}get stuffing(){return this._stuffing}get calculatePrice(){return findPriceAndCalories(Hamburger.SIZES,this._size,"price")+findPriceAndCalories(Hamburger.STUFFINGS,this._stuffing,"price")+findPriceAndCalories(Hamburger.TOPPINGS,this._toppings,"price")}get calculateCalories(){return findPriceAndCalories(Hamburger.SIZES,this._size,"calories")+findPriceAndCalories(Hamburger.STUFFINGS,this._stuffing,"calories")+findPriceAndCalories(Hamburger.TOPPINGS,this._toppings,"calories")}}Hamburger.SIZE_SMALL="SIZE_SMALL",Hamburger.SIZE_LARGE="SIZE_LARGE",Hamburger.SIZES={[Hamburger.SIZE_SMALL]:{price:30,calories:50},[Hamburger.SIZE_LARGE]:{price:50,calories:100}},Hamburger.STUFFING_CHEESE="STUFFING_CHEESE",Hamburger.STUFFING_SALAD="STUFFING_SALAD",Hamburger.STUFFING_MEAT="STUFFING_MEAT",Hamburger.STUFFINGS={[Hamburger.STUFFING_CHEESE]:{price:15,calories:20},[Hamburger.STUFFING_SALAD]:{price:20,calories:5},[Hamburger.STUFFING_MEAT]:{price:35,calories:15}},Hamburger.TOPPING_SPICE="TOPPING_SPICE",Hamburger.TOPPING_SAUCE="TOPPING_SAUCE",Hamburger.TOPPINGS={[Hamburger.TOPPING_SPICE]:{price:10,calories:0},[Hamburger.TOPPING_SAUCE]:{price:15,calories:5}};const hamburger=new Hamburger(Hamburger.SIZE_LARGE,Hamburger.STUFFING_CHEESE);hamburger.addTopping(Hamburger.TOPPING_SPICE,Hamburger.TOPPING_SAUCE),console.log(hamburger.calculatePrice),console.log(hamburger.calculateCalories),console.log(hamburger);